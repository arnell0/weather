{"version":3,"sources":["icons/light/search.svg","SearchBar.js","icons/dark/map-pin.svg","icons/dark/sun.svg","icons/dark/wind.svg","icons/dark/droplet.svg","icons/dark/cloud.svg","icons/dark/moon.svg","CityCard.js","App.js","index.js"],"names":["SearchBar","props","useState","searchTerm","setSearchTerm","searchTermOrg","setSearchTermOrg","autoComplete","setAutoComplete","autoFocus","setAutoFocus","className","onSubmit","e","preventDefault","type","placeholder","value","onChange","onKeyDown","key","length","target","map","a","i","src","search","alt","srcset","getSearchList","supabase","from","select","ilike","CitiesWorld","data","error","console","log","item","name","setSelectionRange","autoList","slice","CityCard","meta","today","condition","getIcons","style","backgroundColor","color","onClick","onClose","mapPin","textDecoration","city","country","icon","desc","airTemperature","wind","windSpeed","droplet","relativeHumidity","date","_date","Date","getDay","getDayName","split","days","filter","forEach","push","getDays","index","totalCloudCover","_time","parseInt","night","sun","cloud","moon","App","active","setActive","setData","createClient","process","url","fetch","then","response","json","requestsRemaining","catch","err","getData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d1bbf51.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/search.7323df73.svg\";","import React, { useState } from 'react'\nimport './SearchBar.css'\nimport search from './icons/light/search.svg'\n\n\nexport default function SearchBar(props) {\n  const [searchTerm, setSearchTerm] = useState('')\n  const [searchTermOrg, setSearchTermOrg] = useState('')\n  const [autoComplete, setAutoComplete] = useState([])\n\n  const [autoFocus, setAutoFocus] = useState(-1)\n\n  return (\n    <div className={`SearchBar`}>\n      <form className=\"SearchBar__form\" onSubmit={handleSubmit}>\n        <input autoFocus className=\"SearchBar__input\" type=\"text\" placeholder=\"Type a city ...\" \n        value={searchTerm} onChange={handleAutoComplete} \n        onKeyDown={handleKeyPress} />\n      </form>\n\n      <div className=\"autoComplete\">\n        {autoComplete && autoComplete.map((a, i) => (\n          <div key={i} className={`autoComplete__item ${autoFocus === i ? \"autoComplete__item--active\" : \"\"}`}>\n            {a}\n          </div>\n        ))}\n      </div>\n      <img src={search} className=\"SearchIcon\" alt=\"\" srcset=\"\"/>\n    </div>\n  )\n\n  async function getSearchList(value) {\n    let { data: CitiesWorld, error } = await props.supabase.from('CitiesWorld').select('name').ilike('name', `${value}%`)\n    if (error) console.log(error)\n    return CitiesWorld.map(item => item.name)\n  }\n\n  function handleSubmit(e){\n    e.preventDefault()\n\n    setSearchTerm('')\n    setSearchTermOrg('')\n    setAutoComplete([])\n    setAutoFocus(-1)\n    \n    props.onSubmit(searchTerm)\n  }\n\n  async function handleAutoComplete(e) {\n    let value = e.target.value\n    setSearchTerm(value)\n    e.target.setSelectionRange(value.length, value.length);\n\n    if(value) {\n      // var autoList = []\n      // props.searchList.filter(item => item.includes(value.toLowerCase()))\n      // .forEach(item => { autoList.push(item) });\n      var autoList = await getSearchList(value)\n      setAutoComplete(autoList.slice(0, 5))\n    } else setAutoComplete([])\n  }\n\n  function handleKeyPress(e){\n    const key = e.key\n    if (key === 'ArrowDown' && autoFocus < autoComplete.length - 1) {\n      setAutoFocus(autoFocus+1)\n      setSearchTerm(autoComplete[autoFocus+1])\n      \n      if(autoFocus === -1) setSearchTermOrg(e.target.value)\n    }\n    else if (key === 'ArrowUp' && autoFocus > 0) {\n      setAutoFocus(autoFocus-1)\n      setSearchTerm(autoComplete[autoFocus-1])\n    }\n    else if (key === 'ArrowUp' && autoFocus > -1) {\n      setAutoFocus(autoFocus-1)\n      setSearchTerm(searchTermOrg)\n    }\n    if (key === 'ArrowUp') e.preventDefault()\n  }\n}\n","export default __webpack_public_path__ + \"static/media/map-pin.8c41fcd3.svg\";","export default __webpack_public_path__ + \"static/media/sun.ed23b430.svg\";","export default __webpack_public_path__ + \"static/media/wind.d2a4a1fe.svg\";","export default __webpack_public_path__ + \"static/media/droplet.49d3b134.svg\";","export default __webpack_public_path__ + \"static/media/cloud.6320a388.svg\";","export default __webpack_public_path__ + \"static/media/moon.a82cae44.svg\";","import React from 'react'\n\nimport './CityCard.css'\n\nimport mapPin from './icons/dark/map-pin.svg'\n// import sun from './icons/light/sun.svg'\nimport sun from './icons/dark/sun.svg'\nimport wind from './icons/dark/wind.svg'\nimport droplet from './icons/dark/droplet.svg'\nimport cloud from './icons/dark/cloud.svg'\nimport moon from './icons/dark/moon.svg'\n\nexport default function CityCard(props) {\n  const {meta, data} = props.data\n  const today = {data: [...data][0], condition: getIcons([...data][0])}\n  \n  return (\n    <div className=\"CityCard\" style={{backgroundColor: today.condition.color}}>\n      <div className=\"CityCard__header\" onClick={props.onClose}>\n        <img src={mapPin} alt=\"\" srcset=\"\"/> &nbsp; <span style={{textDecoration: \"underline\"}}>{meta.city}, {meta.country}</span>\n      </div>\n      <div className=\"CityCard__today\">\n        <img className=\"today__icon\" src={today.condition.icon} alt=\"\" srcset=\"\"/>\n        \n        <div className=\"today__desc\">{today.condition.desc}</div>\n\n        <div className=\"today__temp\">\n          {today.data.airTemperature} Â°C\n        </div>\n        <div className=\"today__extra\">\n          <div className=\"today__extra--img\">\n            <img src={wind} alt=\"\" srcset=\"\"/>\n            &nbsp;\n            {today.data.windSpeed}ms  \n          </div>\n          <div className=\"today__extra--img\">\n            <img src={droplet} alt=\"\" srcset=\"\"/>\n            &nbsp;\n            {today.data.relativeHumidity}%\n          </div>\n        </div>\n      </div>\n      \n      \n      <div className=\"CityCard__forecast\">\n        <div className=\"forecast__item--header\">\n          {getDayName(today.data.date)}\n        </div>\n        <div className=\"CityCard__forecast--scroll\">\n        {getDays(today.data.date).map((item, index) => {\n          const condition = getIcons(item)\n\n          return (\n            <div className=\"forecast__item\" key={index}>\n            <div className=\"forecast__item--card\">\n              <div className=\"forecast__item--time\" >{item.date.split('T')[1].split(':00Z')[0]}</div>\n              <img className=\"forecast__item--icon\" src={condition.icon} alt=\"\" srcset=\"\"/>\n              <div className=\"forecast__item--temp\">\n                {item.airTemperature} Â°C\n              </div>\n            </div>\n          </div>\n          )\n        })}\n        </div>\n      </div>\n\n    </div>\n  )\n\n  function getDayName(date) {\n    const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n    const _date = new Date(date)\n    let day = days[_date.getDay()]\n    return day\n  }\n\n  function getDays(date) {\n    const _date = date.split('T')[0]\n    var days = []\n    data.filter(item => item.date.split('T')[0] === _date)\n    .forEach(item => { days.push(item) });\n    return days\n  }\n\n  function getIcons(item) {\n    const {airTemperature, totalCloudCover, date} = item\n\n    const _time = parseInt(date.split('T')[1].split(':00:00Z')[0])\n    const night = _time > 21 || _time < 4  \n\n    let condition = {\n      icon: \"\",\n      color: \"\",\n      desc: \"\"\n    }\n\n    if (totalCloudCover < 50) {\n      condition.icon = sun\n      condition.desc = \"Sunny\"\n    }\n    else if (totalCloudCover > 50) {\n      condition.icon = cloud\n      condition.desc = \"Cloudy\"\n    }\n    if (airTemperature > 15) condition.color = \"#f3b07c\"\n    else if (airTemperature < 15) condition.color = \"#4BE2E3\"\n\n    if (night) {\n      condition.icon = moon\n      condition.color = '#282c34'\n      condition.desc = 'Night'\n    }\n\n    return condition\n  }\n}\n\n","import React, {useState} from 'react'\nimport {_data} from './data'\nimport SearchBar from './SearchBar'\nimport CityCard from './CityCard'\nimport './App.css'\nimport { createClient } from '@supabase/supabase-js'\n\n\nexport default function App() {\n  const [active, setActive] = useState(false)\n  const [data, setData] = useState()\n  const supabase = createClient('https://wfapkikzcykkjzxihggu.supabase.co', process.env.REACT_APP_SUPABASE_KEY)\n\n  return (\n    <div className=\"App\">\n      <div className={`App__search ${active ? \"App__search--active\" : \"\"}`}>\n        <SearchBar supabase={supabase} onSubmit={handleSearch} active={active} />      \n      </div>      \n      <div className={`App__cities ${active ? \"App__cities--active\" : \"\"}`}>\n        {data && <CityCard onClose={() => setActive(false)} data={data} />}\n      </div>\n\n    </div>\n  )\n\n  function handleSearch(searchTerm) {\n    setActive(true)\n    getData(searchTerm)\n    // setData(_data)\n  }\n\n  function getData(searchTerm) {\n    let url = `https://api.therainery.com/forecast/weather?city=${searchTerm}`\n    let key = \"fzsdZcfoX960LtVFNBkc26qdpohxk4kh3VZvV8T8\"\n    fetch(url, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-api-key\": key,\n      }\n    })\n    .then(response => response.json())\n    .then(response => {\n        setData(response)\n        console.log(response.meta.requestsRemaining)\n\n    })\n    .catch(err => {\n      console.error(err)\n    })\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}